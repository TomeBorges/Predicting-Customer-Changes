#library(readr)
library(caret)
#library(corrplot)
library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(knitr)
library(ggplot2)
library(lubridate)
library(plyr)
library(gbm)
library(Rcpp)
tr <- read.transactions('ElectronidexTransactions2017.csv', format = 'basket', sep=',')
tr
inspect(tr[0:10]) # See the first N transactions.
#OR
LIST(tr[0:10]) # Lists the transactions by conversion (LIST must be capitalized)
length(tr)
table(size(tr))
tr <- tr[which(size(tr) != 0)]
table(size(tr))
itemLabels(tr)
summary(tr)
itemFrequencyPlot(tr, topN=20, type='absolute')
itemFrequencyPlot(tr, topN=20, type='relative')
barplot(table(size(tr)))
image(sample(tr, 25))
rules <- apriori(tr, parameter = list(supp=0.1, conf=0.5,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.5,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.05,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "lift"))
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.25,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "lift"))
is.redundant(rules)
redundant <- which(is.redundant(rules))
redundant
rules <- rules[-redundant]
inspect(rules)
ItemRules <- subset(rules, items %in% "HP Laptop")
inspect(ItemRules)
ItemRules <- subset(rules, items %in% "iMac")
inspect(ItemRules)
library(colorspace) # for sequential_hcl
topRules <- rules[1:10]
plot(topRules, control=list(col=rainbow(2)))
plot(rules, method="paracoord", control=list(reorder=TRUE))
plot(topRules, method="graph",control=list(col=rainbow(2)))
plot(topRules, method="paracoord", control=list(reorder=TRUE))
plot(topRules, method="graph",control=list(col=rainbow(2)))
plot(topRules, method="graph",control=list(col=rainbow(2)))
plot(topRules, method="graph", control=list(engine = "igraph"))
png(file="GroupedTransactions.png", width=8, height=6, units="in", res=400)
plot(topRules, method = "grouped")
dev.off()
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "count"))
#library(readr)
library(caret)
#library(corrplot)
library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(knitr)
library(ggplot2)
library(lubridate)
library(plyr)
library(gbm)
library(Rcpp)
tr <- read.transactions('ElectronidexTransactions2017.csv', format = 'basket', sep=',')
tr
inspect(tr[0:10]) # See the first N transactions.
#OR
LIST(tr[0:10]) # Lists the transactions by conversion (LIST must be capitalized)
length(tr)
table(size(tr))
tr <- tr[which(size(tr) != 0)]
table(size(tr))
itemLabels(tr)
summary(tr)
itemFrequencyPlot(tr, topN=20, type='absolute')
itemFrequencyPlot(tr, topN=20, type='relative')
barplot(table(size(tr)))
image(sample(tr, 25))
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.25,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "count"))
inspect(sort(rules, by = "lift"))
is.redundant(rules)
redundant <- which(is.redundant(rules))
redundant
rules <- rules[-redundant]
inspect(rules)
rules <- rules[-redundant]
inspect(rules)
rules <- rules[-redundant]
inspect(rules)
rules <- rules[-redundant]
inspect(rules)
rules <- rules[-redundant]
inspect(rules)
#library(readr)
library(caret)
#library(corrplot)
library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(knitr)
library(ggplot2)
library(lubridate)
library(plyr)
library(gbm)
library(Rcpp)
tr <- read.transactions('ElectronidexTransactions2017.csv', format = 'basket', sep=',')
tr
inspect(tr[0:10]) # See the first N transactions.
#OR
LIST(tr[0:10]) # Lists the transactions by conversion (LIST must be capitalized)
length(tr)
table(size(tr))
tr <- tr[which(size(tr) != 0)]
table(size(tr))
itemLabels(tr)
summary(tr)
itemFrequencyPlot(tr, topN=20, type='absolute')
itemFrequencyPlot(tr, topN=20, type='relative')
barplot(table(size(tr)))
image(sample(tr, 25))
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.25,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "count"))
inspect(sort(rules, by = "lift"))
is.redundant(rules)
redundant <- which(is.redundant(rules))
redundant
rules <- rules[-redundant]
inspect(rules)
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.10,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "count"))
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.05,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.25,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
ItemRules <- subset(rules, items ~%in% "HP Laptop")
ItemRules <- subset(rules, items %in% "HP Laptop")
inspect(ItemRules)
ItemRules <- subset(rules, !items %in% c("HP Laptop","iMac"))
inspect(ItemRules)
inspect(sort(rules, by = "coverage"))
topRulesConfidence <- rules[1:10]
topRulesSupport <- sort(rules, by = "support")[1:10]
plot(topRulesConfidence, control=list(col=rainbow(2)))
plot(topRulesSupport, control=list(col=rainbow(2)))
plot(topRulesConfidence, method="paracoord", control=list(reorder=TRUE))
plot(topRulesSupport, method="paracoord", control=list(reorder=TRUE))
plot(topRulesConfidence, method="graph",control=list(col=rainbow(2)))
plot(topRulesSupport, method="graph",control=list(col=rainbow(2)))
plot(topRulesConfidence, method="graph",control=list(col=rainbow(2)))
plot(topRulesSupport, method="graph", control=list(engine = "igraph"))
plot(topRulesConfidence, method="graph", control=list(engine = "igraph"))
plot(topRulesSupport, method="graph", control=list(engine = "igraph"))
png(file="GroupedTransactions.png", width=8, height=6, units="in", res=400)
plot(topRulesConfidence, method = "grouped")
dev.off()
png(file="GroupedTransactions.png", width=8, height=6, units="in", res=400)
plot(topRulesSupport, method = "grouped")
dev.off()
rules <- apriori(tr, parameter = list(supp=0.01, conf=0.3,minlen=2))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
inspect(rules)
#inspect(rules[1:10])
inspect(sort(rules, by = "support"))
inspect(sort(rules, by = "count"))
inspect(sort(rules, by = "lift"))
inspect(sort(rules, by = "coverage"))
is.redundant(rules)
redundant <- which(is.redundant(rules))
redundant
rules <- rules[-redundant]
inspect(rules)
#inspect(sort(rules, by = "count"))
inspect(sort(rules, by = "lift"))
inspect(sort(rules, by = "coverage"))
hist(rules$support)                                   # Draw histogram
rules
rules$support
hist(inspect(rules)$support)                                   # Draw histogram
hist(inspect(rules)$support)                                   # Draw histogram
abline(v = median(rules$support),                     # Add line for median
col = "red",
lwd = 3)
hist(inspect(rules)$support)                                   # Draw histogram
abline(v = median(inspect(rules)$support),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(inspect(rules)$support) * 1.7,                 # Add text for median
y = median(inspect(rules)$support) * 1.7,
paste("Median =", median(inspect(rules)$support)),
col = "red",
cex = 2)
hist(inspect(rules)$confidence)                                   # Draw histogram
abline(v = median(inspect(rules)$confidence),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(inspect(rules)$confidence) * 1.7,                 # Add text for median
y = median(inspect(rules)$confidence) * 1.7,
paste("Median =", median(inspect(rules)$confidence)),
col = "red",
cex = 2)
png(file="GroupedTransactions_TopConfidence.png", width=8, height=6, units="in", res=400)
plot(topRulesConfidence, method = "grouped")
dev.off()
png(file="GroupedTransactions_TopSupport.png", width=8, height=6, units="in", res=400)
plot(topRulesSupport, method = "grouped")
dev.off()
hist(inspect(rules)$support)                                   # Draw histogram
abline(v = median(inspect(rules)$support),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(inspect(rules)$support) * 1.7,                 # Add text for median
y = median(inspect(rules)$support) * 1.7,
paste("Median =", median(inspect(rules)$support)),
col = "red",
cex = 2)
hist(inspect(rules)$confidence)                                   # Draw histogram
abline(v = median(inspect(rules)$confidence),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(inspect(rules)$confidence) * 1.7,                 # Add text for median
y = median(inspect(rules)$confidence) * 1.7,
paste("Median =", median(inspect(rules)$confidence)),
col = "red",
cex = 2)
support_series <-inspect(rules)$support
hist(support_series)                                   # Draw histogram
abline(v = median(support_series),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(support_series) * 1.7,                 # Add text for median
y = median(support_series) * 1.7,
paste("Median =", median(support_series),
col = "red",
cex = 2)
hist(inspect(rules)$confidence)                                   # Draw histogram
support_series <-inspect(rules)$support
hist(support_series)                                  # Draw histogram
abline(v = median(support_series),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(support_series) * 1.7,                 # Add text for median
y = median(support_series) * 1.7,
paste("Median =", median(support_series)),
col = "red",
cex = 2)
hist(inspect(rules)$confidence)                                   # Draw histogram
abline(v = median(inspect(rules)$confidence),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(inspect(rules)$confidence) * 1.7,                 # Add text for median
y = median(inspect(rules)$confidence) * 1.7,
paste("Median =", median(inspect(rules)$confidence)),
col = "red",
cex = 2)
support_series <-inspect(rules)$support
hist(support_series)                                  # Draw histogram
abline(v = median(support_series),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(support_series) * 1.7,                 # Add text for median
y = median(support_series) * 1.7,
paste("Median =", median(support_series)),
col = "red",
cex = 2)
confidence_series<-inspect(rules)$confidence
hist(confidence_series)                                   # Draw histogram
abline(v = median(confidence_series,                     # Add line for median
col = "red",
lwd = 3)
text(x = median(confidence_series) * 1.7,                 # Add text for median
support_series <-inspect(rules)$support
hist(support_series)                                  # Draw histogram
abline(v = median(support_series),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(support_series) * 1.7,                 # Add text for median
y = median(support_series) * 1.7,
paste("Median =", median(support_series)),
col = "red",
cex = 2)
confidence_series<-inspect(rules)$confidence
hist(confidence_series)                                   # Draw histogram
abline(v = median(confidence_series),                     # Add line for median
col = "red",
lwd = 3)
text(x = median(confidence_series) * 1.7,                 # Add text for median
y = median(confidence_series) * 1.7,
paste("Median =", median(confidence_series)),
col = "red",
cex = 2)
topRulesConfidenceNot <- subset(rules, !items %in% c("HP Laptop","iMac"))[1:10]
topRulesConfidenceNot <- subset(rules, !items %in% c("HP Laptop","iMac"))#[1:10]
topRulesConfidenceNot
rules
topRulesConfidenceNot <- subset(rules, !items %in% c("HP Laptop","iMac"))[1:8]
topRulesSupportNot <- sort(subset(rules, !items %in% c("HP Laptop","iMac")), by = "support")[1:10]
topRulesConfidenceNot <- subset(rules, !items %in% c("HP Laptop","iMac"))[1:8]
topRulesSupportNot <- sort(subset(rules, !items %in% c("HP Laptop","iMac")), by = "support")[1:8]
plot(topRulesConfidenceNot, method="paracoord", control=list(reorder=TRUE))
plot(topRulesSupportNot, method="paracoord", control=list(reorder=TRUE))
