install.packages('corrplot')
library(corrplot)
devtools::install_github('taiyun/corrplot', build_vignettes = TRUE)
setwd("C:/Downloads");
setwd("Downloads");
install.packages(corrplot_0.92, repos=NULL)
install.packages("corrplot_0.92.zip", repos=NULL)
install.packages("corrplot", repos=NULL)
install.packages(path_to_file, repos = NULL, type="source")
install.packages(corrplot, repos = NULL, type="source")
install.packages("corrplot", repos = NULL, type="source")
library(corrplot)
corrplot(corrData)
library(readr)
library(caret)
library(ggplot2)
library(dplyr)
library(corrplot)
train_df<- read.csv("existingproductattributes2017.csv")#Clients who included their favorite computer brand in the questionaire answers
test_df<- read.csv("newproductattributes2017.csv") #Clients that did not favorite computer brand
train_df
test_df
#print("List your attributes within your data set.")
#attributes(train_df)  # Too long
print("Prints the min, max, mean, median, and quartiles of each attribute.")
summary(train_df)
print("Displays the structure of your data set.")
str(train_df)
print("Names your attributes within your data set.")
names(train_df)
#print("Will print out the instances within that particular column in your data set.")
#train_df$salary # Too long
#train_df$age  # Too long
print("Prints the min, max, mean, median, and quartiles of each attribute.")
summary(test_df)
print("Displays the structure of your data set.")
str(test_df)
print("Names your attributes within your data set.")
names(test_df)
sapply(train_df, typeof)
sapply(train_df, typeof) == sapply(test_df, typeof)
#Convert categorical columns into factors to indicate that these columns contain a limited number of unique values.
length(table(train_df$ProductType))
#We have 12 possibilities of ProductType. Since we previously had 18 columns in total, after dummifying the data both datasets will contain (18-1+12=) 29 columns.
# Rewrite the train_df with the dummy variables:
newDataFrame <- dummyVars(" ~ .", data = train_df)
train_df <- data.frame(predict(newDataFrame, newdata = train_df))
train_df
# Rewrite the train_df with the dummy variables:
newDataFrame <- dummyVars(" ~ .", data = test_df)
test_df <- data.frame(predict(newDataFrame, newdata = test_df))
test_df
any(is.na(train_df))
any(is.na(test_df))
names(which(colSums(is.na(train_df)) > 0))
train_df$BestSellersRank
train_df$BestSellersRank <- NULL
train_df
test_df$BestSellersRank <- NULL
test_df
str(train_df)
str(test_df)
corrData_train <- cor(train_df)
#corrData_train
corrData_test <- cor(test_df)
#corrData_test
corrplot(corrData_train)
corrplot(corrData_train, type='lower')
corrplot(corrData_train, type='lower'){width = 1000%}
png(file="corr.png", res=300, width=4500, height=4500)
corrplot(corrData_train, type='lower'){width = 1000%}
corrplot(corrData_train, type='lower')
png(file="corr.png", res=300, width=4500, height=4500)
corrplot(corrData_train, type='lower')
corrplot.mixed(corrData_train, order = 'AOE')
png(file="corr.png", res=300, width=4500, height=4500)
corrplot.mixed(corrData_train, order = 'AOE')
png(file="corr.png", res=300, width=4500, height=4500)
corrplot.mixed(corrData_train, method ='number', type='lower')
png(file="corr.png", res=300, width=4500, height=4500)
corrplot.mixed(corrData_train, method ='number')
corrplot(corrData_train, method ='number')
png(file="corr.png", res=300, width=4500, height=4500)
corrplot(corrData_train, method ='number')
png(file="corr_train.png", res=300, width=4500, height=4500)
corrplot(corrData_train, method ='number')
png(file="corr_test.png", res=300, width=4500, height=4500)
corrplot(corrData_test, method ='number')
png(file="corr_train.png", res=300, width=4500, height=4500)
corrplot(corrData_train, method ='number')
png(file="corr_test.png", res=300, width=4500, height=4500)
corrplot(corrData_test, method ='number')
png(file="corr_test.png", res=300, width=4500, height=4500)
corrplot(corrData_test, method ='number')
png(file="corr_train.png", res=300, width=4500, height=4500)
corrplot(corrData_train, method ='number')
train_df
#Salary
hist(train_df$Price,xlab="Salary",main="Distribution of salary amount")
#Salary
hist(train_df$Price,xlab="Salary",main="Distribution of salary amount")
train_df
png(file="corr_train.png", res=300, width=4500, height=4500)
corrplot(corrData_train, method ='number')
png(file="corr_test.png", res=300, width=4500, height=4500)
corrplot(corrData_test, method ='number')
png(file="corr_train.png", res=300, width=4500, height=4500)
corrplot(corrData_train, method ='number')
dev.off()
png(file="corr_test.png", res=300, width=4500, height=4500)
corrplot(corrData_test, method ='number')
dev.off()
#Salary
hist(train_df$Price,xlab="Salary",main="Distribution of salary amount")
