install.packages("readr")
library("readr")
IrisDataset <- read.csv("iris.csv")
attributes(IrisDataset)
summary(IrisDataset)
str(IrisDataset)
names(IrisDataset)
#hist(IrisDataset$Species)
#Unable to plot histogram of vector of strings in R. Either factorize:
plot( as.factor( IrisDataset$Species ))
#Or use other libs such as ggplot2:
library("ggplot2")
qplot( IrisDataset$Species )
#Or this was a mistake and it is pretended a histogram of any other variable:
hist( IrisDataset$Sepal.Length)
hist( IrisDataset$Sepal.Width)
hist( IrisDataset$Petal.Length)
hist( IrisDataset$Petal.Width)
#Added closing parenthesis as well as plotting for other variables.
plot( IrisDataset$Sepal.Length)
plot( IrisDataset$Sepal.Width)
plot( IrisDataset$Petal.Length)
plot( IrisDataset$Petal.Width)
#Unable to plot whole dataset as there are non numerical features. Instead plot variable by variable.
qqnorm( IrisDataset$Sepal.Length)
qqnorm( IrisDataset$Sepal.Width)
qqnorm( IrisDataset$Petal.Length)
qqnorm( IrisDataset$Petal.Width)
#Cannot convert characters into numeric, convert into factor.
IrisDataset$Species <- as.factor(IrisDataset$Species)
#If numeric is required then an additional step would be required:
#IrisDataset$Species<- as.numeric( as.factor(IrisDataset$Species))
set.seed(123)
trainSize <- round(nrow(IrisDataset) * 0.7) #Train size was too small
testSize <- nrow(IrisDataset) - trainSize #trainsize instead of trainset
trainSize
testSize
#Missing random sample of train indices
training_indices<-sample(seq_len(nrow(IrisDataset)),size =trainSize) # Select random sample of row numbers with size 'trainsize'
trainSet <- IrisDataset[training_indices, ]
testSet <- IrisDataset[-training_indices, ]
#No need to repeat this part
#set.seed(405)
#trainSet <- IrisDataset[training_indices, ]
#testSet <- IrisDataset[-training_indices, ]
#Write trainSet in the data parameter instead of on each variable just to improve readability
LinearModel<- lm(Petal.Length ~ Petal.Width, trainSet) #predict petal length using petal width
summary(LinearModel)
#Variable mispelled
prediction<-predict(LinearModel,testSet)
prediction
cbind(Pred_length = prediction, Real_length = testSet$Petal.Length)
